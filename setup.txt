
install raspbian
add wpa_supplicant / ssh files to /boot for wireless setup 

change password:
    - passwd pi

update latest raspbian
    - apt update
    - apt full-upgrade
    
add ssh keys
sudo apt install screen

turn on SPI (raspi config) (also i2c etc... ?)

install node.js (this is for pi zero w : arm v6) :
    - wget https://nodejs.org/dist/latest-v10.x/node-v10.22.1-linux-armv6l.tar.xz
    - tar xJf node-v10.22.1-linux-armv6l.tar.xz
    - sudo cp -r node-v10.22.1-linux-armv6l/* /usr/local/


install pigpio (apt version is older - latest is on github (apt gave me v64 when v78 was latest)):
    - sudo apt update
    - sudo apt install pigpio
    - npm i --unsafe-perm -g pigpio

install pi-spi:
    - npm i pi-spi

install git:
    sudo apt install git

create empty repo on github (in this case: RichardLidstone/conduit-crawler)

    git init
    git add . 
    git config --global user.email "lidstone@gmail.com"
    git config --global user.name "OctoBadger"
    git commit -m "conduit-crawler skeleton"
    git remote add origin git@github.com:RichardLidstone/conduit-crawler.git        # important to use ssh not http ssh agent key will not be used
    git branch -M main
    git push -u origin main


ssh agent forwarding:
    - on host machine install keychain (I forget the steps - varies based on host) but I end up with this when I open a terminal:            
        * keychain 2.8.5 ~ http://www.funtoo.org
        * Found existing ssh-agent: 1234
        * Known ssh key: /path/to/.ssh/id_rsa
    - in host machine .ssh/config:
        add: ForwardAgent yes
    - add key(s) to github:
        - copy pubic key contents
        - paste into new github key definition
    - DONT: setup ssh-agent on the pi!!!
    - DONT: sudo apt install keychain (...on pi - any ssh-agent running appears to completely (and silently) nix forwarding of keys)
    - test using (on client):
        > ssh-add -L                    # should list your key from the host
        > ssh -T git@github.com         # should authenticate with github
        



ssh for remote development:
(can't use the vs code ssh-remote because it doesn't support the raspberry Pi zero W : arm v6 architechture - and that wasn't obvious to me, or easy to discover let me tell you)
(This would be easier to do pure windows (no wsl2) and even easier in pure linux, (with both I don't think you'd need the intermediate 2222 tunnel off the top of my head) but I guess I'm a sucker for punishment)
---------------------------

windows host config:                        
    - copied win .ssh key to pi (PS> type $env:USERPROFILE\.ssh\id_rsa.pub | ssh -p 2222 pi@10.0.0.23 "cat >> .ssh/authorized_keys")
    - can add "10.0.0.23     lccam" to hosts file   
    - in vs code workspace launch.json add:
        "configurations": [
                {
                    "name": "Attach to Process",
                    "type": "node",
                    "request": "attach",
                    "port": 9229
                }
                ...
        ]            

wsl2 config:
    - copied wsl2 .ssh key to pi
    - config:
        Host externalHost
            HostName www.externalDomain.org                     # use your domain / external IP or whatever
            LocalForward 127.0.0.2:22 192.168.1.211:22          # forward pi ssh port to wsl2 (binding to 127.0.0.2:22 means you can just ssh to 127.0.0.2 without a special port and still run sshd on wsl2 localhost)
            LocalForward 0.0.0.0:2222 192.168.1.211:22          # also forward pi ssh port to public ip of wsl2 instance (this time you may have to use a different port to avoid collision)
            User richard                                        # default connect as me

        Host lccam
            HostName 127.0.0.2                                  # pretend the pi aliased as lccam (local conduit camera) is local to wsl2 instance (this is the case whereever you're connecting from)
            LocalForward 9229 127.0.0.1:9229                    # forward the pi's debugging port to 'lccam' (127.0.0.2:9229)
            User pi                                             # default connect as pi user
            ForwardAgent yes                                    # forward our agent keys so we can use github when ssh'd in to the pi
                            

then! :
    - in wsl2:
        > ssh externalHost

    - in vs code:
        - use ssh fs extension to connect whatever folders via pi@10.0.0.23:2222 (this uses windows' ssh / network so you need to use the wsl2 ip / port forwarded by wsl2 ssh connection, so you must be ssh'd in)
        - use vs code terminal: (note: I had to add -q to stop "channel 3: open failed: connect failed: Connection refused" messages spamming the terminal - suddenly started happening, I believe it's the vs code debugger trying to connect to 9229, and ssh warning that nothing is listening on the pi 9229 port (until you start a debugging session). Wasn't happening before, and just started - perhaps an update added a heartbeat or something?)
            > ssh -q lccam
            > sudo node --inspect-brk whatever.js
    - attach from vs code debugger pane
    - profit!                        
                            
                            

linux host config:

by default sshd listens to 0.0.0.0 which means both any external ip (eg: 10.0.0.15:22) and loopback 127.0.0.*:22 but I want to add ssh local forwards to 127.0.0.2 / 127.0.0.3 etc
so first step is to setup sshd to listen only to explicit ips 

create file /usr/local/sbin/sshd-listenLocal.sh: (-rwxr-xr-x root root)
contents---------------------
#!/bin/bash

ip -4 addr show dev wlp2s0 | grep "inet" | awk '{print $2}' | awk -F/ '{print "ListenAddress " $1}' > /etc/ssh/sshd_config.d/listenLocalIp.conf
end--------------------------


modify file /etc/systemd/system/multi-user.target.wants/sshd.service:
    - add "ExecStartPre=+/usr/local/sbin/sshd-listenLocal.sh" as below

contents---------------------
[Unit]
Description=OpenSSH Daemon
After=network.target

[Service]
Type=notify
EnvironmentFile=-/etc/sysconfig/ssh
ExecStartPre=+/usr/local/sbin/sshd-listenLocal.sh
ExecStartPre=/usr/sbin/sshd-gen-keys-start
ExecStartPre=/usr/sbin/sshd -t $SSHD_OPTS
ExecStart=/usr/sbin/sshd -D $SSHD_OPTS
ExecReload=/bin/kill -HUP $MAINPID
KillMode=process
Restart=on-failure
RestartPreventExitStatus=255
TasksMax=infinity

[Install]
WantedBy=multi-user.target
end--------------------------





TODO:


not - servo-blaster (using pigpio) 


install pi-blaster (? pigpio does PWM, so probably not necessary) see: https://github.com/sarfata/pi-blaster
    - sudo apt-get install autoconf
    - git clone https://github.com/sarfata/pi-blaster.git
    - cd pi-blaster
    - /autogen.sh
    - ./configure
    - make
